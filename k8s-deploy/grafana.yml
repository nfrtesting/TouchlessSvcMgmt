---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tsm-grafana-sidecar
data:
  runapp.sh: |
    #!/bin/sh
    apk add git curl
    mkdir /clones
    cd /clones
    git clone $DASHBOARD_GIT_URL dashboards

    while :
    do
      cd /clones/dashboards
      git pull origin
      cp -R * /dashboards
      sleep 60
    done
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: tsm-grafana-config
data:
    dashboards.yaml: |
      apiVersion: 1

      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: true
        updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards
        options:
          path: /dashboards
    defaultds.yaml: |
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://tsm-prometheus-web:9090
        isDefault: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsm-grafana
spec:
  selector:
    matchLabels:
      app: tsm-grafana
  replicas: 1
  template:
    metadata:
      labels:
        app: tsm-grafana
    spec:
      containers:
      - name: sidecar
        image: alpine:3.9
        command: ["/bin/sh"]
        args: ["/tmp/runapp.sh"]
        env:
        - name: http_proxy
          value: ""
        - name: no_proxy
          value: "localhost"
        - name: GIT_SSL_NO_VERIFY
          value: "'true'"
        - name: DASHBOARD_GIT_URL
          valueFrom:
            secretKeyRef:
              name: dashboard-src
              key: url
        volumeMounts:
        - name: grafana-dashboards
          mountPath: /dashboards
        - name: tsm-sidecar
          mountPath: /tmp
      - name: grafana
        image: grafana/grafana:6.6.0
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits:
            memory: "1000Mi"
            cpu: "1000m"
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-admin
              key: username
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-admin
              key: password
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_METRICS_ENABLED
          value: "true"
        volumeMounts:
        - name: tsm-grafana-files
          mountPath: /etc/grafana/provisioning/datasources/defaultds.yaml
          subPath: defaultds.yaml
        - name: tsm-grafana-files
          mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
          subPath: dashboards.yaml
        - name: grafana-dashboards
          mountPath: /dashboards
      volumes:
        - name: grafana-dashboards
          emptyDir: {}
        - name: tsm-sidecar
          configMap:
            name: tsm-grafana-sidecar
        - name: tsm-grafana-files
          configMap:
            name: tsm-grafana-config
---
apiVersion: v1
kind: Service
metadata:
    name: tsm-grafana-web
spec:
    type: NodePort
    ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: tsm-grafana
    sessionAffinity: None
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tsm-grafana
  annotations:
      kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: grafana.tsm
    http:
      paths:
      - path: /
        backend:
          serviceName: tsm-grafana-web
          servicePort: 3000

   